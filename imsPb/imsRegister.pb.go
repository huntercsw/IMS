// Code generated by protoc-gen-go. DO NOT EDIT.
// source: imsRegister.proto

package imsPb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceRegisterRequest struct {
	ServiceGroup         string   `protobuf:"bytes,1,opt,name=serviceGroup,proto3" json:"serviceGroup,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceHost          string   `protobuf:"bytes,3,opt,name=serviceHost,proto3" json:"serviceHost,omitempty"`
	ServicePort          string   `protobuf:"bytes,4,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceRegisterRequest) Reset()         { *m = ServiceRegisterRequest{} }
func (m *ServiceRegisterRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceRegisterRequest) ProtoMessage()    {}
func (*ServiceRegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0e18e48ab8297be, []int{0}
}

func (m *ServiceRegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRegisterRequest.Unmarshal(m, b)
}
func (m *ServiceRegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRegisterRequest.Marshal(b, m, deterministic)
}
func (m *ServiceRegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRegisterRequest.Merge(m, src)
}
func (m *ServiceRegisterRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceRegisterRequest.Size(m)
}
func (m *ServiceRegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRegisterRequest proto.InternalMessageInfo

func (m *ServiceRegisterRequest) GetServiceGroup() string {
	if m != nil {
		return m.ServiceGroup
	}
	return ""
}

func (m *ServiceRegisterRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceRegisterRequest) GetServiceHost() string {
	if m != nil {
		return m.ServiceHost
	}
	return ""
}

func (m *ServiceRegisterRequest) GetServicePort() string {
	if m != nil {
		return m.ServicePort
	}
	return ""
}

type ServiceRegisterResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceRegisterResponse) Reset()         { *m = ServiceRegisterResponse{} }
func (m *ServiceRegisterResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceRegisterResponse) ProtoMessage()    {}
func (*ServiceRegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0e18e48ab8297be, []int{1}
}

func (m *ServiceRegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRegisterResponse.Unmarshal(m, b)
}
func (m *ServiceRegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRegisterResponse.Marshal(b, m, deterministic)
}
func (m *ServiceRegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRegisterResponse.Merge(m, src)
}
func (m *ServiceRegisterResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceRegisterResponse.Size(m)
}
func (m *ServiceRegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRegisterResponse proto.InternalMessageInfo

func (m *ServiceRegisterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceRegisterRequest)(nil), "imsPb.ServiceRegisterRequest")
	proto.RegisterType((*ServiceRegisterResponse)(nil), "imsPb.ServiceRegisterResponse")
}

func init() { proto.RegisterFile("imsRegister.proto", fileDescriptor_a0e18e48ab8297be) }

var fileDescriptor_a0e18e48ab8297be = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0xcc, 0x2d, 0x0e,
	0x4a, 0x4d, 0xcf, 0x2c, 0x2e, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcd,
	0xcc, 0x2d, 0x0e, 0x48, 0x52, 0x5a, 0xc4, 0xc8, 0x25, 0x16, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c,
	0x0a, 0x53, 0x10, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0xa4, 0xc4, 0xc5, 0x53, 0x0c, 0x91,
	0x71, 0x2f, 0xca, 0x2f, 0x2d, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x11, 0x13, 0x52,
	0xe0, 0xe2, 0x86, 0xf2, 0xfd, 0x12, 0x73, 0x53, 0x25, 0x98, 0xc0, 0x4a, 0x90, 0x85, 0x90, 0x54,
	0x78, 0xe4, 0x17, 0x97, 0x48, 0x30, 0xa3, 0xa8, 0x00, 0x09, 0x21, 0xa9, 0x08, 0xc8, 0x2f, 0x2a,
	0x91, 0x60, 0x41, 0x51, 0x01, 0x12, 0x52, 0x32, 0xe6, 0x12, 0xc7, 0x70, 0x63, 0x71, 0x41, 0x7e,
	0x5e, 0x71, 0xaa, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0x2a, 0xd4, 0x7d,
	0x30, 0xae, 0x51, 0x22, 0x17, 0xb7, 0x27, 0xc2, 0xd7, 0x42, 0x41, 0x5c, 0xfc, 0x68, 0x66, 0x08,
	0xc9, 0xea, 0x81, 0xc3, 0x40, 0x0f, 0xbb, 0xff, 0xa5, 0xe4, 0x70, 0x49, 0x43, 0xac, 0x56, 0x62,
	0x48, 0x62, 0x03, 0x07, 0xa5, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x70, 0x2d, 0x83, 0xfc, 0x5f,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImsRegisterClient is the client API for ImsRegister service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImsRegisterClient interface {
	ServiceRegister(ctx context.Context, in *ServiceRegisterRequest, opts ...grpc.CallOption) (*ServiceRegisterResponse, error)
}

type imsRegisterClient struct {
	cc *grpc.ClientConn
}

func NewImsRegisterClient(cc *grpc.ClientConn) ImsRegisterClient {
	return &imsRegisterClient{cc}
}

func (c *imsRegisterClient) ServiceRegister(ctx context.Context, in *ServiceRegisterRequest, opts ...grpc.CallOption) (*ServiceRegisterResponse, error) {
	out := new(ServiceRegisterResponse)
	err := c.cc.Invoke(ctx, "/imsPb.ImsRegister/ServiceRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImsRegisterServer is the server API for ImsRegister service.
type ImsRegisterServer interface {
	ServiceRegister(context.Context, *ServiceRegisterRequest) (*ServiceRegisterResponse, error)
}

// UnimplementedImsRegisterServer can be embedded to have forward compatible implementations.
type UnimplementedImsRegisterServer struct {
}

func (*UnimplementedImsRegisterServer) ServiceRegister(ctx context.Context, req *ServiceRegisterRequest) (*ServiceRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceRegister not implemented")
}

func RegisterImsRegisterServer(s *grpc.Server, srv ImsRegisterServer) {
	s.RegisterService(&_ImsRegister_serviceDesc, srv)
}

func _ImsRegister_ServiceRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImsRegisterServer).ServiceRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imsPb.ImsRegister/ServiceRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImsRegisterServer).ServiceRegister(ctx, req.(*ServiceRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImsRegister_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imsPb.ImsRegister",
	HandlerType: (*ImsRegisterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceRegister",
			Handler:    _ImsRegister_ServiceRegister_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "imsRegister.proto",
}
