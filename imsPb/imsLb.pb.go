// Code generated by protoc-gen-go. DO NOT EDIT.
// source: imsLb.proto

package imsPb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetServiceRequest struct {
	ServiceGroup         string   `protobuf:"bytes,1,opt,name=serviceGroup,proto3" json:"serviceGroup,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceRequest) Reset()         { *m = GetServiceRequest{} }
func (m *GetServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceRequest) ProtoMessage()    {}
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_533f9b36b1cce5b0, []int{0}
}

func (m *GetServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceRequest.Unmarshal(m, b)
}
func (m *GetServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceRequest.Merge(m, src)
}
func (m *GetServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceRequest.Size(m)
}
func (m *GetServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceRequest proto.InternalMessageInfo

func (m *GetServiceRequest) GetServiceGroup() string {
	if m != nil {
		return m.ServiceGroup
	}
	return ""
}

func (m *GetServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type GetServiceResponse struct {
	ServiceHost          string   `protobuf:"bytes,1,opt,name=serviceHost,proto3" json:"serviceHost,omitempty"`
	ServicePort          string   `protobuf:"bytes,2,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceResponse) Reset()         { *m = GetServiceResponse{} }
func (m *GetServiceResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceResponse) ProtoMessage()    {}
func (*GetServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_533f9b36b1cce5b0, []int{1}
}

func (m *GetServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceResponse.Unmarshal(m, b)
}
func (m *GetServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceResponse.Marshal(b, m, deterministic)
}
func (m *GetServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceResponse.Merge(m, src)
}
func (m *GetServiceResponse) XXX_Size() int {
	return xxx_messageInfo_GetServiceResponse.Size(m)
}
func (m *GetServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceResponse proto.InternalMessageInfo

func (m *GetServiceResponse) GetServiceHost() string {
	if m != nil {
		return m.ServiceHost
	}
	return ""
}

func (m *GetServiceResponse) GetServicePort() string {
	if m != nil {
		return m.ServicePort
	}
	return ""
}

type ServiceTrafficLimitRequest struct {
	ServiceGroup         string   `protobuf:"bytes,1,opt,name=serviceGroup,proto3" json:"serviceGroup,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceHost          string   `protobuf:"bytes,3,opt,name=serviceHost,proto3" json:"serviceHost,omitempty"`
	ServicePort          string   `protobuf:"bytes,4,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
	TrafficThreshold     int32    `protobuf:"varint,5,opt,name=trafficThreshold,proto3" json:"trafficThreshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceTrafficLimitRequest) Reset()         { *m = ServiceTrafficLimitRequest{} }
func (m *ServiceTrafficLimitRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceTrafficLimitRequest) ProtoMessage()    {}
func (*ServiceTrafficLimitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_533f9b36b1cce5b0, []int{2}
}

func (m *ServiceTrafficLimitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceTrafficLimitRequest.Unmarshal(m, b)
}
func (m *ServiceTrafficLimitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceTrafficLimitRequest.Marshal(b, m, deterministic)
}
func (m *ServiceTrafficLimitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceTrafficLimitRequest.Merge(m, src)
}
func (m *ServiceTrafficLimitRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceTrafficLimitRequest.Size(m)
}
func (m *ServiceTrafficLimitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceTrafficLimitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceTrafficLimitRequest proto.InternalMessageInfo

func (m *ServiceTrafficLimitRequest) GetServiceGroup() string {
	if m != nil {
		return m.ServiceGroup
	}
	return ""
}

func (m *ServiceTrafficLimitRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceTrafficLimitRequest) GetServiceHost() string {
	if m != nil {
		return m.ServiceHost
	}
	return ""
}

func (m *ServiceTrafficLimitRequest) GetServicePort() string {
	if m != nil {
		return m.ServicePort
	}
	return ""
}

func (m *ServiceTrafficLimitRequest) GetTrafficThreshold() int32 {
	if m != nil {
		return m.TrafficThreshold
	}
	return 0
}

type ServiceTrafficLimitResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceTrafficLimitResponse) Reset()         { *m = ServiceTrafficLimitResponse{} }
func (m *ServiceTrafficLimitResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceTrafficLimitResponse) ProtoMessage()    {}
func (*ServiceTrafficLimitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_533f9b36b1cce5b0, []int{3}
}

func (m *ServiceTrafficLimitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceTrafficLimitResponse.Unmarshal(m, b)
}
func (m *ServiceTrafficLimitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceTrafficLimitResponse.Marshal(b, m, deterministic)
}
func (m *ServiceTrafficLimitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceTrafficLimitResponse.Merge(m, src)
}
func (m *ServiceTrafficLimitResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceTrafficLimitResponse.Size(m)
}
func (m *ServiceTrafficLimitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceTrafficLimitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceTrafficLimitResponse proto.InternalMessageInfo

func (m *ServiceTrafficLimitResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GetServiceRequest)(nil), "imsPb.GetServiceRequest")
	proto.RegisterType((*GetServiceResponse)(nil), "imsPb.GetServiceResponse")
	proto.RegisterType((*ServiceTrafficLimitRequest)(nil), "imsPb.ServiceTrafficLimitRequest")
	proto.RegisterType((*ServiceTrafficLimitResponse)(nil), "imsPb.ServiceTrafficLimitResponse")
}

func init() { proto.RegisterFile("imsLb.proto", fileDescriptor_533f9b36b1cce5b0) }

var fileDescriptor_533f9b36b1cce5b0 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x09, 0x50, 0x10, 0x57, 0x84, 0x8a, 0x07, 0x14, 0xc2, 0x12, 0x3c, 0x55, 0x0c, 0x19,
	0x60, 0x60, 0x67, 0x29, 0x95, 0x22, 0x54, 0xa5, 0x95, 0x80, 0xd1, 0x49, 0xaf, 0xc4, 0x52, 0x5d,
	0x07, 0x9f, 0xcb, 0xe3, 0xf1, 0x10, 0x3c, 0x11, 0x22, 0x71, 0xc1, 0x34, 0x05, 0x16, 0xc6, 0xfb,
	0x7c, 0xf7, 0xdf, 0x7f, 0x77, 0x86, 0xae, 0x54, 0x94, 0xe6, 0x49, 0x65, 0xb4, 0xd5, 0xac, 0x23,
	0x15, 0x8d, 0x72, 0xfe, 0x08, 0xc7, 0x03, 0xb4, 0x63, 0x34, 0x2f, 0xb2, 0xc0, 0x0c, 0x9f, 0x97,
	0x48, 0x96, 0x71, 0x38, 0xa4, 0x86, 0x0c, 0x8c, 0x5e, 0x56, 0x61, 0x10, 0x07, 0xfd, 0x83, 0xec,
	0x1b, 0x63, 0x31, 0x74, 0x5d, 0x7c, 0x27, 0x14, 0x86, 0xdb, 0x75, 0x8a, 0x8f, 0xf8, 0x03, 0x30,
	0x5f, 0x9a, 0x2a, 0xbd, 0x20, 0xf4, 0xea, 0x6e, 0x35, 0x59, 0x27, 0xed, 0x23, 0x2f, 0x63, 0xa4,
	0x8d, 0x5d, 0x53, 0xfe, 0x40, 0xfc, 0x2d, 0x80, 0xc8, 0xe9, 0x4e, 0x8c, 0x98, 0xcd, 0x64, 0x91,
	0x4a, 0x25, 0xed, 0xbf, 0xda, 0x5f, 0x37, 0xba, 0xf3, 0xa7, 0xd1, 0xdd, 0x96, 0x51, 0x76, 0x01,
	0x3d, 0xdb, 0x18, 0x9c, 0x94, 0x06, 0xa9, 0xd4, 0xf3, 0x69, 0xd8, 0x89, 0x83, 0x7e, 0x27, 0x6b,
	0x71, 0x7e, 0x0d, 0x67, 0x1b, 0x67, 0x72, 0x7b, 0x0b, 0x61, 0x5f, 0x21, 0x91, 0x78, 0x42, 0x37,
	0xcf, 0x2a, 0xbc, 0x7c, 0x0d, 0xe0, 0x68, 0xa8, 0x28, 0xd5, 0x62, 0x7a, 0x23, 0xe6, 0x62, 0x51,
	0x20, 0x1b, 0x42, 0xef, 0x6b, 0xf5, 0xf7, 0xd2, 0x96, 0x59, 0xc6, 0xc2, 0xa4, 0xbe, 0x78, 0xd2,
	0x3a, 0x77, 0x74, 0xba, 0xe1, 0xa5, 0xe9, 0xca, 0xb7, 0x98, 0x80, 0x93, 0xf1, 0x27, 0xf7, 0x9d,
	0xb1, 0x73, 0x57, 0xf6, 0xf3, 0x25, 0x22, 0xfe, 0x5b, 0xca, 0xaa, 0x45, 0xbe, 0x57, 0xff, 0xc8,
	0xab, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xec, 0x8d, 0x09, 0xdc, 0xa0, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImsLoadBalanceClient is the client API for ImsLoadBalance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImsLoadBalanceClient interface {
	GetServiceWithRR(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceResponse, error)
	SetServiceTrafficLimit(ctx context.Context, in *ServiceTrafficLimitRequest, opts ...grpc.CallOption) (*ServiceTrafficLimitResponse, error)
}

type imsLoadBalanceClient struct {
	cc *grpc.ClientConn
}

func NewImsLoadBalanceClient(cc *grpc.ClientConn) ImsLoadBalanceClient {
	return &imsLoadBalanceClient{cc}
}

func (c *imsLoadBalanceClient) GetServiceWithRR(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceResponse, error) {
	out := new(GetServiceResponse)
	err := c.cc.Invoke(ctx, "/imsPb.ImsLoadBalance/GetServiceWithRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imsLoadBalanceClient) SetServiceTrafficLimit(ctx context.Context, in *ServiceTrafficLimitRequest, opts ...grpc.CallOption) (*ServiceTrafficLimitResponse, error) {
	out := new(ServiceTrafficLimitResponse)
	err := c.cc.Invoke(ctx, "/imsPb.ImsLoadBalance/SetServiceTrafficLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImsLoadBalanceServer is the server API for ImsLoadBalance service.
type ImsLoadBalanceServer interface {
	GetServiceWithRR(context.Context, *GetServiceRequest) (*GetServiceResponse, error)
	SetServiceTrafficLimit(context.Context, *ServiceTrafficLimitRequest) (*ServiceTrafficLimitResponse, error)
}

// UnimplementedImsLoadBalanceServer can be embedded to have forward compatible implementations.
type UnimplementedImsLoadBalanceServer struct {
}

func (*UnimplementedImsLoadBalanceServer) GetServiceWithRR(ctx context.Context, req *GetServiceRequest) (*GetServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceWithRR not implemented")
}
func (*UnimplementedImsLoadBalanceServer) SetServiceTrafficLimit(ctx context.Context, req *ServiceTrafficLimitRequest) (*ServiceTrafficLimitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetServiceTrafficLimit not implemented")
}

func RegisterImsLoadBalanceServer(s *grpc.Server, srv ImsLoadBalanceServer) {
	s.RegisterService(&_ImsLoadBalance_serviceDesc, srv)
}

func _ImsLoadBalance_GetServiceWithRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImsLoadBalanceServer).GetServiceWithRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imsPb.ImsLoadBalance/GetServiceWithRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImsLoadBalanceServer).GetServiceWithRR(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImsLoadBalance_SetServiceTrafficLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceTrafficLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImsLoadBalanceServer).SetServiceTrafficLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imsPb.ImsLoadBalance/SetServiceTrafficLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImsLoadBalanceServer).SetServiceTrafficLimit(ctx, req.(*ServiceTrafficLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImsLoadBalance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imsPb.ImsLoadBalance",
	HandlerType: (*ImsLoadBalanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServiceWithRR",
			Handler:    _ImsLoadBalance_GetServiceWithRR_Handler,
		},
		{
			MethodName: "SetServiceTrafficLimit",
			Handler:    _ImsLoadBalance_SetServiceTrafficLimit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "imsLb.proto",
}
