// Code generated by protoc-gen-go. DO NOT EDIT.
// source: imsTicketOffice.proto

package imsPb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetTokenRequest struct {
	DomainName           string   `protobuf:"bytes,1,opt,name=domainName,proto3" json:"domainName,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenRequest) Reset()         { *m = GetTokenRequest{} }
func (m *GetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenRequest) ProtoMessage()    {}
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ca0bbeb063cb1e1, []int{0}
}

func (m *GetTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenRequest.Unmarshal(m, b)
}
func (m *GetTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenRequest.Merge(m, src)
}
func (m *GetTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenRequest.Size(m)
}
func (m *GetTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenRequest proto.InternalMessageInfo

func (m *GetTokenRequest) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *GetTokenRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type ImsToken struct {
	DomainName           string   `protobuf:"bytes,1,opt,name=domainName,proto3" json:"domainName,omitempty"`
	RemoteAddr           string   `protobuf:"bytes,2,opt,name=remoteAddr,proto3" json:"remoteAddr,omitempty"`
	TokenId              string   `protobuf:"bytes,3,opt,name=TokenId,proto3" json:"TokenId,omitempty"`
	CreateTime           int64    `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImsToken) Reset()         { *m = ImsToken{} }
func (m *ImsToken) String() string { return proto.CompactTextString(m) }
func (*ImsToken) ProtoMessage()    {}
func (*ImsToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ca0bbeb063cb1e1, []int{1}
}

func (m *ImsToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImsToken.Unmarshal(m, b)
}
func (m *ImsToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImsToken.Marshal(b, m, deterministic)
}
func (m *ImsToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImsToken.Merge(m, src)
}
func (m *ImsToken) XXX_Size() int {
	return xxx_messageInfo_ImsToken.Size(m)
}
func (m *ImsToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ImsToken.DiscardUnknown(m)
}

var xxx_messageInfo_ImsToken proto.InternalMessageInfo

func (m *ImsToken) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *ImsToken) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *ImsToken) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *ImsToken) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func init() {
	proto.RegisterType((*GetTokenRequest)(nil), "imsPb.GetTokenRequest")
	proto.RegisterType((*ImsToken)(nil), "imsPb.ImsToken")
}

func init() { proto.RegisterFile("imsTicketOffice.proto", fileDescriptor_5ca0bbeb063cb1e1) }

var fileDescriptor_5ca0bbeb063cb1e1 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xbd, 0x6a, 0xc3, 0x30,
	0x10, 0x80, 0xab, 0xba, 0x3f, 0xee, 0x75, 0x30, 0x08, 0x5a, 0x44, 0x07, 0x63, 0x3c, 0x79, 0xf2,
	0xd0, 0xd2, 0x07, 0xc8, 0x94, 0x78, 0x49, 0x82, 0xe3, 0x17, 0xb0, 0xa5, 0x33, 0x08, 0x23, 0x2b,
	0x91, 0x94, 0x3c, 0x41, 0x1e, 0x3c, 0x44, 0xd8, 0xa0, 0x64, 0xc9, 0xa8, 0x4f, 0x77, 0x1f, 0x7c,
	0x07, 0x5f, 0x52, 0xd9, 0x46, 0xf2, 0x01, 0xdd, 0xa6, 0xef, 0x25, 0xc7, 0x72, 0x6f, 0xb4, 0xd3,
	0xf4, 0x55, 0x2a, 0xbb, 0xed, 0xf2, 0x1d, 0x24, 0x4b, 0x74, 0x8d, 0x1e, 0x70, 0xac, 0xf1, 0x70,
	0x44, 0xeb, 0x68, 0x0a, 0x20, 0xb4, 0x6a, 0xe5, 0xb8, 0x6e, 0x15, 0x32, 0x92, 0x91, 0xe2, 0xa3,
	0x0e, 0x08, 0xcd, 0xe0, 0xd3, 0xa2, 0x39, 0x49, 0x8e, 0x7e, 0xe0, 0xd9, 0x0f, 0x84, 0x28, 0x3f,
	0x13, 0x88, 0x2b, 0x65, 0xbd, 0xf5, 0xa1, 0x2e, 0x05, 0x30, 0xa8, 0xb4, 0xc3, 0x85, 0x10, 0x66,
	0xb2, 0x05, 0x84, 0x32, 0x78, 0xf7, 0xa2, 0x4a, 0xb0, 0xc8, 0x7f, 0xce, 0xcf, 0xeb, 0x26, 0x37,
	0xd8, 0x3a, 0x6c, 0xa4, 0x42, 0xf6, 0x92, 0x91, 0x22, 0xaa, 0x03, 0xf2, 0xbb, 0x82, 0xa4, 0xba,
	0x6d, 0xa7, 0xff, 0x10, 0xcf, 0xb9, 0xf4, 0xbb, 0xf4, 0x27, 0x28, 0xef, 0xfa, 0x7f, 0x92, 0x89,
	0xcf, 0x05, 0xf9, 0x53, 0xf7, 0xe6, 0x6f, 0xf6, 0x77, 0x09, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x8a,
	0x6e, 0xae, 0x4c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImsTicketOfficeClient is the client API for ImsTicketOffice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImsTicketOfficeClient interface {
	GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*ImsToken, error)
}

type imsTicketOfficeClient struct {
	cc *grpc.ClientConn
}

func NewImsTicketOfficeClient(cc *grpc.ClientConn) ImsTicketOfficeClient {
	return &imsTicketOfficeClient{cc}
}

func (c *imsTicketOfficeClient) GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*ImsToken, error) {
	out := new(ImsToken)
	err := c.cc.Invoke(ctx, "/imsPb.ImsTicketOffice/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImsTicketOfficeServer is the server API for ImsTicketOffice service.
type ImsTicketOfficeServer interface {
	GetToken(context.Context, *GetTokenRequest) (*ImsToken, error)
}

// UnimplementedImsTicketOfficeServer can be embedded to have forward compatible implementations.
type UnimplementedImsTicketOfficeServer struct {
}

func (*UnimplementedImsTicketOfficeServer) GetToken(ctx context.Context, req *GetTokenRequest) (*ImsToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}

func RegisterImsTicketOfficeServer(s *grpc.Server, srv ImsTicketOfficeServer) {
	s.RegisterService(&_ImsTicketOffice_serviceDesc, srv)
}

func _ImsTicketOffice_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImsTicketOfficeServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imsPb.ImsTicketOffice/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImsTicketOfficeServer).GetToken(ctx, req.(*GetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImsTicketOffice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imsPb.ImsTicketOffice",
	HandlerType: (*ImsTicketOfficeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetToken",
			Handler:    _ImsTicketOffice_GetToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "imsTicketOffice.proto",
}
